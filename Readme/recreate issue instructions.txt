The final project can be found here:
https://github.com/silverbulletgt/Integrate-Composer-Dialog-Using-Skill
 
To recreate the issue:
Prerequisites
•Install Bot Emulator: https://github.com/Microsoft/BotFramework-Emulator/blob/master/README.md
 
Open the solution file in visual studio
Integrate-Composer-Dialog-Using-Skill.sln
 
Put a breakpoint on line 72 of DefaultAdapter.cs - this is where the error can be seen
 
Start debugging the project
Open Bot Emulator
Connect to the bot: http://localhost:3978/api/messages
Type "Greeting"
Bot should respond with "Hello, I have recognized that you said greeting"
Type "Skill"
The breakpoint on line 72 of DefaultAdapter.cs should trigger giving details of the error
 
Error & stack trace can be found here: https://github.com/silverbulletgt/Integrate-Composer-Dialog-Using-Skill/blob/master/Readme/error%20stack%20trace.txt

Update:
I was able to download the Bot.Builder SDK, compile & connect to the project to be able to debug the issue.
Determined that the issue was in Microsoft.Bot.Builder.Dialogs.Adaptive.Actions.BeginSkill.cs - Line 157

DialogOptions.ConversationIdFactory = dc.Context.TurnState.Get<SkillConversationIdFactoryBase>() ?? throw new NullReferenceException("Unable to locate SkillConversationIdFactoryBase in HostContext");

Determined that if I add dependency injection of SkillConversationIdFactoryBase & BotFrameworkClient I am able to by pass the issue.

After these changes the skill is called indicated by breakpoints in EchoBot.cs being hit.

The emulator does not display the expected text when the skill is called.  I wonder if there is now an issue with the callback URL not getting back to the emulator.
